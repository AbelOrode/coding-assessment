{"mappings":"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","sources":["./node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./src/main.js","./node_modules/vue/index.js","./node_modules/vue/dist/vue.cjs.js","./node_modules/@vue/compiler-dom/index.js","./node_modules/@vue/compiler-dom/dist/compiler-dom.cjs.js","./node_modules/@vue/compiler-core/index.js","./node_modules/@vue/compiler-core/dist/compiler-core.cjs.js","./node_modules/@vue/shared/index.js","./node_modules/@vue/shared/dist/shared.cjs.js","./node_modules/source-map/source-map.js","./node_modules/source-map/lib/source-map-generator.js","./node_modules/source-map/lib/base64-vlq.js","./node_modules/source-map/lib/base64.js","./node_modules/source-map/lib/util.js","./node_modules/source-map/lib/array-set.js","./node_modules/source-map/lib/mapping-list.js","./node_modules/source-map/lib/source-map-consumer.js","./node_modules/source-map/lib/binary-search.js","./node_modules/source-map/lib/quick-sort.js","./node_modules/source-map/lib/source-node.js","./node_modules/@babel/parser/src/tokenizer/types.js","./node_modules/@babel/parser/src/util/whitespace.js","./node_modules/@babel/parser/src/util/location.js","./node_modules/@babel/parser/src/parser/base.js","./node_modules/@babel/parser/src/parser/comments.js","./node_modules/@babel/parser/src/parser/error-codes.js","./node_modules/@babel/parser/src/parser/error-message.js","./node_modules/@babel/parser/src/parser/error.js","./node_modules/@babel/parser/src/plugins/estree.js","./node_modules/@babel/parser/src/tokenizer/context.js","./node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","./node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","./node_modules/@babel/parser/src/util/identifier.js","./node_modules/@babel/parser/src/util/scopeflags.js","./node_modules/@babel/parser/src/util/scope.js","./node_modules/@babel/parser/src/plugins/flow/scope.js","./node_modules/@babel/parser/src/tokenizer/state.js","./node_modules/@babel/parser/src/tokenizer/index.js","./node_modules/@babel/parser/src/util/class-scope.js","./node_modules/@babel/parser/src/util/expression-scope.js","./node_modules/@babel/parser/src/util/production-parameter.js","./node_modules/@babel/parser/src/parser/util.js","./node_modules/@babel/parser/src/parser/node.js","./node_modules/@babel/parser/src/plugins/flow/index.js","./node_modules/@babel/parser/src/plugins/jsx/xhtml.js","./node_modules/@babel/parser/src/plugins/jsx/index.js","./node_modules/@babel/parser/src/plugins/typescript/scope.js","./node_modules/@babel/parser/src/plugins/typescript/index.js","./node_modules/@babel/parser/src/plugins/placeholders.js","./node_modules/@babel/parser/src/plugins/v8intrinsic.js","./node_modules/@babel/parser/src/plugin-utils.js","./node_modules/@babel/parser/src/options.js","./node_modules/@babel/parser/src/parser/lval.js","./node_modules/@babel/parser/src/parser/expression.js","./node_modules/@babel/parser/src/parser/statement.js","./node_modules/@babel/parser/src/parser/index.js","./node_modules/@babel/parser/src/index.js","./node_modules/estree-walker/dist/umd/estree-walker.js","./node_modules/@vue/runtime-dom/index.js","./node_modules/@vue/runtime-dom/dist/runtime-dom.cjs.js","./node_modules/@vue/runtime-core/index.js","./node_modules/@vue/runtime-core/dist/runtime-core.cjs.js","./node_modules/@vue/reactivity/index.js","./node_modules/@vue/reactivity/dist/reactivity.cjs.js","./src/App.vue","./src/components/Layout.vue","./src/components/Testimonial.vue","./node_modules/@parcel/transformer-js/lib/esmodule-helpers.js","./src/components/MovieFilter.vue","./src/data.json"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// @flow\nimport type { TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(context: Array<TokContext>) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  decimal: new TokenType(\"decimal\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  privateName: new TokenType(\"#name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\", { beforeExpr }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  // This is only needed to support % as a Hack-pipe topic token. If the proposal\n  // ends up choosing a different token, it can be merged with tt.assign.\n  moduloAssign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: new TokenType(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\n\n/**\n * A whitespace token containing comments\n * @typedef CommentWhitespace\n * @type {object}\n * @property {number} start - the start of the whitespace token.\n * @property {number} end - the end of the whitespace token.\n * @property {Array<Comment>} comments - the containing comments\n * @property {Node | null} leadingNode - the immediately preceding AST node of the whitespace token\n * @property {Node | null} trailingNode - the immediately following AST node of the whitespace token\n * @property {Node | null} containingNode - the innermost AST node containing the whitespace\n *                                         with minimal size (|end - start|)\n */\nexport type CommentWhitespace = {\n  start: number,\n  end: number,\n  comments: Array<Comment>,\n  leadingNode: Node | null,\n  trailingNode: Node | null,\n  containingNode: Node | null,\n};\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nfunction setTrailingComments(node: Node, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nexport function setInnerComments(node: Node, comments: Array<Comment> | void) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else if (comments !== undefined) {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n *\n * @param {Node} node\n * @param {Array<Node>} elements\n * @param {Array<Comment>} comments\n */\nfunction adjustInnerComments(\n  node: Node,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\n/** @class CommentsParser */\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   *\n   * @param {Node} node\n   * @returns {void}\n   * @memberof CommentsParser\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   *\n   * @memberof CommentsParser\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        commentWS.trailingNode.leadingComments = comments;\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaning commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   *\n   * @memberof CommentsParser\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterepret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing */\n  // async /* 1 */ function f() {}\n  /*\n   * the comment whitespace \"* 1 *\" has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark \"* 1 *\" as\n   * inner comments. So \"* 1 *\" should be detached from the Identifier node.\n   *\n   * @param {N.Node} node the last finished AST node _before_ current token\n   * @returns\n   * @memberof CommentsParser\n   */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n}\n","// @flow\n\nexport const ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n});\n\nexport type ErrorCode = $Values<typeof ErrorCodes>;\n","// @flow\n\nimport { makeErrorTemplates, ErrorCodes } from \"./error\";\n\n/* eslint sort-keys: \"error\" */\n\n/**\n * @module parser/error-message\n */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = makeErrorTemplates(\n  {\n    AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n    ArgumentsInClass:\n      \"'arguments' is only allowed in functions and class methods.\",\n    AsyncFunctionInSingleStatementContext:\n      \"Async functions can only be declared at the top level or inside a block.\",\n    AwaitBindingIdentifier:\n      \"Can not use 'await' as identifier inside an async function.\",\n    AwaitBindingIdentifierInStaticBlock:\n      \"Can not use 'await' as identifier inside a static block.\",\n    AwaitExpressionFormalParameter:\n      \"'await' is not allowed in async function parameters.\",\n    AwaitNotInAsyncContext:\n      \"'await' is only allowed within async functions and at the top levels of modules.\",\n    AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n    BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n    BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n    BadSetterRestParameter:\n      \"A 'set' accesor function argument must not be a rest parameter.\",\n    ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n    ConstructorClassPrivateField:\n      \"Classes may not have a private field named '#constructor'.\",\n    ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n    ConstructorIsAsync: \"Constructor can't be an async function.\",\n    ConstructorIsGenerator: \"Constructor can't be a generator.\",\n    DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n    DecoratorBeforeExport:\n      \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n    DecoratorConstructor:\n      \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n    DecoratorExportClass:\n      \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n    DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n    DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n    DeletePrivateField: \"Deleting a private field is not allowed.\",\n    DestructureNamedImport:\n      \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n    DuplicateConstructor: \"Duplicate constructor in the same class.\",\n    DuplicateDefaultExport: \"Only one default export allowed per module.\",\n    DuplicateExport:\n      \"`%0` has already been exported. Exported identifiers must be unique.\",\n    DuplicateProto: \"Redefinition of __proto__ property.\",\n    DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n    ElementAfterRest: \"Rest element must be last element.\",\n    EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n    ExportBindingIsString:\n      \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n    ExportDefaultFromAsIdentifier:\n      \"'from' is not allowed as an identifier after 'export default'.\",\n    ForInOfLoopInitializer:\n      \"'%0' loop variable declaration may not have an initializer.\",\n    ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n    ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n    GeneratorInSingleStatementContext:\n      \"Generators can only be declared at the top level or inside a block.\",\n    IllegalBreakContinue: \"Unsyntactic %0.\",\n    IllegalLanguageModeDirective:\n      \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n    IllegalReturn: \"'return' outside of function.\",\n    ImportBindingIsString:\n      'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n    ImportCallArgumentTrailingComma:\n      \"Trailing comma is disallowed inside import(...) arguments.\",\n    ImportCallArity: \"`import()` requires exactly %0.\",\n    ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n    ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n    InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n    InvalidCodePoint: \"Code point out of bounds.\",\n    InvalidDecimal: \"Invalid decimal.\",\n    InvalidDigit: \"Expected number in radix %0.\",\n    InvalidEscapeSequence: \"Bad character escape sequence.\",\n    InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n    InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n    InvalidIdentifier: \"Invalid identifier %0.\",\n    InvalidLhs: \"Invalid left-hand side in %0.\",\n    InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n    InvalidNumber: \"Invalid number.\",\n    InvalidOrMissingExponent:\n      \"Floating-point numbers require a valid exponent after the 'e'.\",\n    InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n    InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n    InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n    InvalidPropertyBindingPattern: \"Binding member expression.\",\n    InvalidRecordProperty:\n      \"Only properties and spread elements are allowed in record definitions.\",\n    InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n    LabelRedeclaration: \"Label '%0' is already declared.\",\n    LetInLexicalBinding:\n      \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n    LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n    MalformedRegExpFlags: \"Invalid regular expression flag.\",\n    MissingClassName: \"A class name is required.\",\n    MissingEqInAssignment:\n      \"Only '=' operator can be used for specifying default value.\",\n    MissingSemicolon: \"Missing semicolon.\",\n    MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n    MixingCoalesceWithLogical:\n      \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n    ModuleAttributeDifferentFromType:\n      \"The only accepted module attribute is `type`.\",\n    ModuleAttributeInvalidValue:\n      \"Only string literals are allowed as module attribute values.\",\n    ModuleAttributesWithDuplicateKeys:\n      'Duplicate key \"%0\" is not allowed in module attributes.',\n    ModuleExportNameHasLoneSurrogate:\n      \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n    ModuleExportUndefined: \"Export '%0' is not defined.\",\n    MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n    NewlineAfterThrow: \"Illegal newline after throw.\",\n    NoCatchOrFinally: \"Missing catch or finally clause.\",\n    NumberIdentifier: \"Identifier directly after number.\",\n    NumericSeparatorInEscapeSequence:\n      \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n    ObsoleteAwaitStar:\n      \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n    OptionalChainingNoNew:\n      \"Constructors in/after an Optional Chain are not allowed.\",\n    OptionalChainingNoTemplate:\n      \"Tagged Template Literals are not allowed in optionalChain.\",\n    OverrideOnConstructor:\n      \"'override' modifier cannot appear on a constructor declaration.\",\n    ParamDupe: \"Argument name clash.\",\n    PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n    PatternHasMethod: \"Object pattern can't contain methods.\",\n    PipeBodyIsTighter:\n      \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n    PipeTopicRequiresHackPipes:\n      'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n    PipeTopicUnbound:\n      \"Topic reference is unbound; it must be inside a pipe body.\",\n    PipeTopicUnconfiguredToken:\n      'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n    PipeTopicUnused:\n      \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n\n    // Messages whose codes start with “Pipeline” or “PrimaryTopic”\n    // are retained for backwards compatibility\n    // with the deprecated smart-mix pipe operator proposal plugin.\n    // They are subject to removal in a future major version.\n    PipelineBodyNoArrow:\n      'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n    PipelineBodySequenceExpression:\n      \"Pipeline body may not be a comma-separated sequence expression.\",\n    PipelineHeadSequenceExpression:\n      \"Pipeline head should not be a comma-separated sequence expression.\",\n    PipelineTopicUnused:\n      \"Pipeline is in topic style but does not use topic reference.\",\n    PrimaryTopicNotAllowed:\n      \"Topic reference was used in a lexical context without topic binding.\",\n    PrimaryTopicRequiresSmartPipeline:\n      'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n\n    PrivateInExpectedIn:\n      \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n    PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n    RecordExpressionBarIncorrectEndSyntaxType:\n      \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    RecordExpressionBarIncorrectStartSyntaxType:\n      \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    RecordExpressionHashIncorrectStartSyntaxType:\n      \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n    RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n    RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n    SloppyFunction:\n      \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n    StaticPrototype: \"Classes may not have static property named prototype.\",\n    StrictDelete: \"Deleting local variable in strict mode.\",\n    StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n    StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n    StrictFunction:\n      \"In strict mode code, functions can only be declared at top level or inside a block.\",\n    StrictNumericEscape:\n      \"The only valid numeric escape in strict mode is '\\\\0'.\",\n    StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n    StrictWith: \"'with' in strict mode.\",\n    SuperNotAllowed:\n      \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n    SuperPrivateField: \"Private fields can't be accessed on super.\",\n    TrailingDecorator: \"Decorators must be attached to a class element.\",\n    TupleExpressionBarIncorrectEndSyntaxType:\n      \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    TupleExpressionBarIncorrectStartSyntaxType:\n      \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    TupleExpressionHashIncorrectStartSyntaxType:\n      \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n    UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n    UnexpectedAwaitAfterPipelineBody:\n      'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n    UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n    UnexpectedImportExport:\n      \"'import' and 'export' may only appear at the top level.\",\n    UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n    UnexpectedLeadingDecorator:\n      \"Leading decorators must be attached to a class declaration.\",\n    UnexpectedLexicalDeclaration:\n      \"Lexical declaration cannot appear in a single-statement context.\",\n    UnexpectedNewTarget:\n      \"`new.target` can only be used in functions or class properties.\",\n    UnexpectedNumericSeparator:\n      \"A numeric separator is only allowed between two digits.\",\n    UnexpectedPrivateField:\n      \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n    UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n    UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n    UnexpectedToken: \"Unexpected token '%0'.\",\n    UnexpectedTokenUnaryExponentiation:\n      \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n    UnsupportedBind: \"Binding should be performed on object property.\",\n    UnsupportedDecoratorExport:\n      \"A decorated export must export a class declaration.\",\n    UnsupportedDefaultExport:\n      \"Only expressions, functions or classes are allowed as the `default` export.\",\n    UnsupportedImport:\n      \"`import` can only be used in `import()` or `import.meta`.\",\n    UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n    UnsupportedParameterDecorator:\n      \"Decorators cannot be used to decorate parameters.\",\n    UnsupportedPropertyDecorator:\n      \"Decorators cannot be used to decorate object literal properties.\",\n    UnsupportedSuper:\n      \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n    UnterminatedComment: \"Unterminated comment.\",\n    UnterminatedRegExp: \"Unterminated regular expression.\",\n    UnterminatedString: \"Unterminated string constant.\",\n    UnterminatedTemplate: \"Unterminated template.\",\n    VarRedeclaration: \"Identifier '%0' has already been declared.\",\n    YieldBindingIdentifier:\n      \"Can not use 'yield' as identifier inside a generator.\",\n    YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n    ZeroDigitNumericSeparator:\n      \"Numeric separator can not be used after leading 0.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n\nexport const SourceTypeModuleErrorMessages = makeErrorTemplates(\n  {\n    ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n    ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  },\n  /* code */ ErrorCodes.SourceTypeModuleError,\n);\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\nimport { type ErrorCode, ErrorCodes } from \"./error-codes\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n  reasonCode?: String,\n};\nexport type ParsingError = SyntaxError & ErrorContext;\n\nexport type ErrorTemplate = {\n  code: ErrorCode,\n  template: string,\n  reasonCode: string,\n};\nexport type ErrorTemplates = {\n  [key: string]: ErrorTemplate,\n};\n\nexport function makeErrorTemplates(\n  messages: {\n    [key: string]: string,\n  },\n  code: ErrorCode,\n): ErrorTemplates {\n  const templates: ErrorTemplates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode],\n    });\n  });\n  return Object.freeze(templates);\n}\n\nexport { ErrorCodes };\nexport {\n  ErrorMessages as Errors,\n  SourceTypeModuleErrorMessages as SourceTypeModuleErrors,\n} from \"./error-message\";\n\nexport type raiseFunction = (number, ErrorTemplate, ...any) => void;\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(\n    pos: number,\n    { code, reasonCode, template }: ErrorTemplate,\n    ...params: any\n  ): Error | empty {\n    return this.raiseWithData(pos, { code, reasonCode }, template, ...params);\n  }\n\n  /**\n   * Raise a parsing error on given position pos. If errorRecovery is true,\n   * it will first search current errors and overwrite the error thrown on the exact\n   * position before with the new error message. If errorRecovery is false, it\n   * fallbacks to `raise`.\n   *\n   * @param {number} pos\n   * @param {string} errorTemplate\n   * @param {...any} params\n   * @returns {(Error | empty)}\n   * @memberof ParserError\n   */\n  raiseOverwrite(\n    pos: number,\n    { code, template }: ErrorTemplate,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      template.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n        if (error.pos === pos) {\n          return Object.assign(error, { message });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n    return this._raise({ code, loc, pos }, message);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parser/error\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseRegExpLiteral({ pattern, flags }): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T: N.Node>(value: any) {\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const value = stmt.expression.value;\n      const directive = super.stmtToDirective(stmt);\n\n      // Record the expression value as in estree mode we want\n      // the stmt to have the real value e.g. (\"use strict\") and\n      // not the raw value e.g. (\"use\\\\x20strict\")\n      this.addExtra(directive.value, \"expressionValue\", value);\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseMaybePrivateName(...args: [boolean]): any {\n      const node = super.parseMaybePrivateName(...args);\n      if (\n        node.type === \"PrivateName\" &&\n        this.getPluginOption(\"estree\", \"classFeatures\")\n      ) {\n        return this.convertPrivateNameToPrivateIdentifier(node);\n      }\n      return node;\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = (node: any);\n      delete node.id;\n      node.name = name;\n      node.type = \"PrivateIdentifier\";\n      return node;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n      return node.name;\n    }\n\n    parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n      const node = super.parseLiteral<T>(value, type);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        // $FlowIgnore\n        node.computed = false;\n      }\n      type = \"MethodDefinition\";\n      return this.finishNode(node, type);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = (super.parseClassProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = (super.parseClassPrivateProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n        propertyNode.computed = false;\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node != null && this.isObjectProperty(node)) {\n        this.toAssignable(node.value, isLHS);\n\n        return node;\n      }\n\n      return super.toAssignable(node, isLHS);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, ...args) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, ...args);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          ((node: N.Node): N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n  };\n","// @flow\n\n// The token context is used to track whether the apostrophe \"`\"\n// starts or ends a string template\n\nimport { types as tt } from \"./types\";\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true),\n};\n\n// Token-specific context update code\n// Note that we should avoid accessing `this.prodParam` in context update,\n// because it is executed immediately when last token is consumed, which may be\n// before `this.prodParam` is updated. e.g.\n// ```\n// function *g() { () => yield / 2 }\n// ```\n// When `=>` is eaten, the context update of `yield` is executed, however,\n// `this.prodParam` still has `[Yield]` production because it is not yet updated\n\ntt.braceR.updateContext = context => {\n  context.pop();\n};\n\n// we don't need to update context for tt.braceBarL because we do not pop context for tt.braceBarR\n// ideally only dollarBraceL \"${\" needs a non-template context\n// in order to indicate that the last \"`\" in `${`\" starts a new string template\n// inside a template element within outer string template.\n// but when we popped such context in `}`, we lost track of whether this\n// `}` matches a `${` or other tokens matching `}`, so we have to push\n// such context in every token that `}` will match.\ntt.braceL.updateContext =\n  tt.braceHashL.updateContext =\n  tt.dollarBraceL.updateContext =\n    context => {\n      context.push(types.brace);\n    };\n\ntt.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors, type raiseFunction } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  declare raise: raiseFunction;\n  declare inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\nimport type { ParsingError, ErrorTemplate } from \"../parser/error\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false\n        ? false\n        : options.strictMode === true\n        ? true\n        : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: ParsingError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, ErrorTemplate> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number,\n  value: any,\n  type: TokenType,\n  start: number,\n  end: number,\n  /* Used only in readToken_mult_modulo */\n  inType: boolean,\n};\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors, type ErrorTemplate } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState } from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: ErrorTemplate | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // For performance we use a simpified tokenizer state structure\n    // $FlowIgnore\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach((message, pos) =>\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(pos, message),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    if (curContext === ct.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment(): N.CommentBlock | void {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const value = this.input.slice(start + 2, end);\n    const comment = {\n      type: \"CommentBlock\",\n      value: value,\n      start: start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | void {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment();\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === charCodes.dash && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === charCodes.lessThan && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, Errors.StrictOctalLiteral);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos: number, message: ErrorTemplate) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(\n            this.state.pos - 1,\n            Errors.StrictNumericEscape,\n          );\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, Errors.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode: number | void): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode: number | void): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word) || tt.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  // the prevType is required by the jsx plugin\n  // eslint-disable-next-line no-unused-vars\n  updateContext(prevType: TokenType): void {\n    this.state.type.updateContext?.(this.state.context);\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors, type raiseFunction } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  declare raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { ErrorTemplate, raiseFunction } from \"../parser/error\";\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser/error-message) will be recorded in\nsome expression scopes and thrown later when we know what the ambigous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  errors: Map</* pos */ number, /* message */ ErrorTemplate> = new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(pos: number, template: ErrorTemplate) {\n    this.errors.set(pos, template);\n  }\n  clearDeclarationError(pos: number) {\n    this.errors.delete(pos);\n  }\n  iterateErrors(iterator: (template: ErrorTemplate, pos: number) => void) {\n    this.errors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n  declare raise: raiseFunction;\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(pos: number, template: ErrorTemplate): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, template);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    this.raise(pos, template);\n  }\n\n  /**\n   * Record parenthesized identifier errors\n   *\n   * A parenthesized identifier in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordParenthesizedIdentifierError(\n    pos: number,\n    template: ErrorTemplate,\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError(pos: number, template: ErrorTemplate): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, template);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors((template, pos) => {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(pos, template);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport { Errors, type ErrorTemplate, ErrorCodes } from \"./error\";\nimport type { ParsingError } from \"./error\";\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, template?: ErrorTemplate): void {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.end, this.nextTokenStart()),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(this.state.lastTokEnd, Errors.MissingSemicolon);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message,\n      });\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: ErrorTemplate | TokenType = {\n      code: ErrorCodes.SyntaxError,\n      reasonCode: \"UnexpectedToken\",\n      template: \"Unexpected token\",\n    },\n  ): empty {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`,\n      };\n    }\n\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParsingError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: ParsingError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto, optionalParameters } =\n      refExpressionErrors;\n    if (!andThrow) {\n      return (\n        shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0\n      );\n    }\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint) ||\n      this.match(tt.decimal)\n    );\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/proposal-class-fields/#sec-private-names-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssign**: track initializer `=` position\n * - **doubleProto**: track the duplicate `__proto__` key position\n * - **optionalParameters**: track the optional paramter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n  optionalParameters = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: { [key: string]: any };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // $FlowIgnore\n  NodePrototype.__clone = function (): Node {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = \"StringLiteral\";\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../../parser\";\nimport { types as tt, type TokenType } from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart, isKeyword } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  type BindingTypes,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, makeErrorTemplates, ErrorCodes } from \"../../parser/error\";\nimport { cloneIdentifier } from \"../../parser/node\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = makeErrorTemplates(\n  {\n    AmbiguousConditionalArrow:\n      \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n    AmbiguousDeclareModuleKind:\n      \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n    AssignReservedType: \"Cannot overwrite reserved type %0.\",\n    DeclareClassElement:\n      \"The `declare` modifier can only appear on class fields.\",\n    DeclareClassFieldInitializer:\n      \"Initializers are not allowed in fields with the `declare` modifier.\",\n    DuplicateDeclareModuleExports:\n      \"Duplicate `declare module.exports` statement.\",\n    EnumBooleanMemberNotInitialized:\n      \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n    EnumDuplicateMemberName:\n      \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n    EnumInconsistentMemberValues:\n      \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n    EnumInvalidExplicitType:\n      \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n    EnumInvalidExplicitTypeUnknownSupplied:\n      \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n    EnumInvalidMemberInitializerPrimaryType:\n      \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n    EnumInvalidMemberInitializerSymbolType:\n      \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n    EnumInvalidMemberInitializerUnknownType:\n      \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n    EnumInvalidMemberName:\n      \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n    EnumNumberMemberNotInitialized:\n      \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n    EnumStringMemberInconsistentlyInitailized:\n      \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n    GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n    ImportTypeShorthandOnlyInPureImport:\n      \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n    InexactInsideExact:\n      \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n    InexactInsideNonObject:\n      \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n    InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n    InvalidNonTypeImportInDeclareModule:\n      \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n    MissingTypeParamDefault:\n      \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n    NestedDeclareModule:\n      \"`declare module` cannot be used inside another `declare module`.\",\n    NestedFlowComment:\n      \"Cannot have a flow comment inside another flow comment.\",\n    OptionalBindingPattern:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n    SpreadVariance: \"Spread properties cannot have variance.\",\n    ThisParamAnnotationRequired:\n      \"A type annotation is required for the `this` parameter.\",\n    ThisParamBannedInConstructor:\n      \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n    ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n    ThisParamMustBeFirst:\n      \"The `this` parameter must be the first function parameter.\",\n    ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n    TypeBeforeInitializer:\n      \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n    TypeCastInPattern:\n      \"The type cast expression is expected to be wrapped with parenthesis.\",\n    UnexpectedExplicitInexactInObject:\n      \"Explicit inexact syntax must appear at the end of an inexact object.\",\n    UnexpectedReservedType: \"Unexpected reserved type %0.\",\n    UnexpectedReservedUnderscore:\n      \"`_` is only allowed as a type argument to call or new.\",\n    UnexpectedSpaceBetweenModuloChecks:\n      \"Spaces between `%` and `checks` are not allowed here.\",\n    UnexpectedSpreadType:\n      \"Spread operator cannot appear in class or interface definitions.\",\n    UnexpectedSubtractionOperand:\n      'Unexpected token, expected \"number\" or \"bigint\".',\n    UnexpectedTokenAfterTypeParameter:\n      \"Expected an arrow function after this type parameter declaration.\",\n    UnexpectedTypeParameterBeforeAsyncArrowFunction:\n      \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n    UnsupportedDeclareExportKind:\n      \"`declare export %0` is not supported. Use `%1` instead.\",\n    UnsupportedStatementInDeclareModule:\n      \"Only declares and type imports are allowed inside declare module.\",\n    UnterminatedFlowComment: \"Unterminated flow-comment.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: { type: TokenType, value: any }): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): Class<FlowScopeHandler> {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloPos = this.state.start;\n      this.next(); // eat `%`\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloPos + 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(\n              node.value.this.start,\n              FlowErrors.ThisParamBannedInConstructor,\n            );\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.value.this.start,\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n        );\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[],\n      rest: ?N.FlowFunctionTypeParam,\n      _this: ?N.FlowFunctionTypeParam,\n    } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      let _this: ?N.FlowFunctionTypeParam = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode<N.BooleanLiteralTypeAnnotation>(\n            node,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const lookahead = this.lookahead();\n        if (lookahead.type === tt.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (this.state.maybeInArrowParameters) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          if (result.error) {\n            /*:: invariant(refExpressionErrors != null) */\n            super.setOptionalParametersError(refExpressionErrors, result.error);\n          }\n\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(this.state.pos, Errors.InvalidIdentifier, fullWord);\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n      isLHS: boolean,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      ...args:\n        | [string, BindingTypes | void]\n        | [\n            string,\n            BindingTypes | void,\n            ?Set<string>,\n            boolean | void,\n            boolean | void,\n          ]\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n        // estree support\n      } else if (\n        // $FlowFixMe flow does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        method.value.params\n      ) {\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentIsString = this.match(tt.string);\n      const firstIdent = this.parseModuleExportName();\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      } else {\n        if (firstIdentIsString) {\n          /*:: invariant(firstIdent instanceof N.StringLiteral) */\n          throw this.raise(\n            specifier.start,\n            Errors.ImportBindingIsString,\n            firstIdent.value,\n          );\n        }\n        /*:: invariant(firstIdent instanceof N.Node) */\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          specifier.start,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const curContext = context[context.length - 1];\n        if (curContext === tc.j_oTag) {\n          context.length -= 2;\n        } else if (curContext === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      return super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      members: {|\n        booleanMembers: Array<N.Node>,\n        numberMembers: Array<N.Node>,\n        stringMembers: Array<N.Node>,\n        defaultedMembers: Array<N.Node>,\n      |},\n      hasUnknownMembers: boolean,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, makeErrorTemplates, ErrorCodes } from \"../../parser/error\";\nimport type { LookaheadState } from \"../../tokenizer/state\";\nimport State from \"../../tokenizer/state\";\n\ntype JSXLookaheadState = LookaheadState & { inPropertyName: boolean };\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = makeErrorTemplates(\n  {\n    AttributeIsEmpty:\n      \"JSX attributes must only be assigned a non-empty expression.\",\n    MissingClosingTagElement:\n      \"Expected corresponding JSX closing tag for <%0>.\",\n    MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n    UnexpectedSequenceExpression:\n      \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n    UnsupportedJsxValue:\n      \"JSX value should be either an expression or a quoted JSX text.\",\n    UnterminatedJsxContent: \"Unterminated JSX contents.\",\n    UnwrappedAdjacentJSXElements:\n      \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\");\ntc.j_cTag = new TokContext(\"</tag\");\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = context => {\n  context.push(\n    tc.j_expr, // treat as beginning of JSX expression\n    tc.j_oTag, // start opening tag context\n  );\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              const htmlEntity =\n                ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\";\n              const char = this.input[this.state.pos];\n              this.raise(this.state.pos, {\n                code: ErrorCodes.SyntaxError,\n                reasonCode: \"UnexpectedToken\",\n                template: `Unexpected token \\`${char}\\`. Did you mean \\`${htmlEntity}\\` or \\`{'${char}'}\\`?`,\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              expression.expressions[1].start,\n              JsxErrors.UnexpectedSequenceExpression,\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    createLookaheadState(state: State): JSXLookaheadState {\n      const lookaheadState = ((super.createLookaheadState(\n        state,\n      ): any): JSXLookaheadState);\n      lookaheadState.inPropertyName = state.inPropertyName;\n      return lookaheadState;\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      super.updateContext(prevType);\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.exprAllowed = false;\n      } else if (type === tt.jsxTagEnd) {\n        const out = context.pop();\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.exprAllowed = context[context.length - 1] === tc.j_expr;\n        } else {\n          this.state.exprAllowed = true;\n        }\n      } else if (\n        type.keyword &&\n        (prevType === tt.dot || prevType === tt.questionDot)\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        this.state.exprAllowed = type.beforeExpr;\n      }\n    }\n  };\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const topLevelScope = this.scopeStack[0];\n    const { name } = id;\n    if (\n      !topLevelScope.types.has(name) &&\n      !topLevelScope.exportOnlyBindings.has(name)\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport {\n  Errors,\n  makeErrorTemplates,\n  type ErrorTemplate,\n  ErrorCodes,\n} from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility;\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = makeErrorTemplates(\n  {\n    AbstractMethodHasImplementation:\n      \"Method '%0' cannot have an implementation because it is marked abstract.\",\n    AbstractPropertyHasInitializer:\n      \"Property '%0' cannot have an initializer because it is marked abstract.\",\n    AccesorCannotDeclareThisParameter:\n      \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n    AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n    ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n    ClassMethodHasReadonly:\n      \"Class methods cannot have the 'readonly' modifier.\",\n    ConstructorHasTypeParameters:\n      \"Type parameters cannot appear on a constructor declaration.\",\n    DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n    DeclareClassFieldHasInitializer:\n      \"Initializers are not allowed in ambient contexts.\",\n    DeclareFunctionHasImplementation:\n      \"An implementation cannot be declared in ambient contexts.\",\n    DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n    DuplicateModifier: \"Duplicate modifier: '%0'.\",\n    EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n    EmptyTypeArguments: \"Type argument list cannot be empty.\",\n    EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n    ExpectedAmbientAfterExportDeclare:\n      \"'export declare' must be followed by an ambient declaration.\",\n    ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n    IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n    IndexSignatureHasAbstract:\n      \"Index signatures cannot have the 'abstract' modifier.\",\n    IndexSignatureHasAccessibility:\n      \"Index signatures cannot have an accessibility modifier ('%0').\",\n    IndexSignatureHasDeclare:\n      \"Index signatures cannot have the 'declare' modifier.\",\n    IndexSignatureHasOverride:\n      \"'override' modifier cannot appear on an index signature.\",\n    IndexSignatureHasStatic:\n      \"Index signatures cannot have the 'static' modifier.\",\n    InvalidModifierOnTypeMember:\n      \"'%0' modifier cannot appear on a type member.\",\n    InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n    InvalidTupleMemberLabel:\n      \"Tuple members must be labeled with a simple identifier.\",\n    MissingInterfaceName:\n      \"'interface' declarations must be followed by an identifier.\",\n    MixedLabeledAndUnlabeledElements:\n      \"Tuple members must all have names or all not have names.\",\n    NonAbstractClassHasAbstractMethod:\n      \"Abstract methods can only appear within an abstract class.\",\n    NonClassMethodPropertyHasAbstractModifer:\n      \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n    OptionalTypeBeforeRequired:\n      \"A required element cannot follow an optional element.\",\n    OverrideNotInSubClass:\n      \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n    PatternIsOptional:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    PrivateElementHasAbstract:\n      \"Private elements cannot have the 'abstract' modifier.\",\n    PrivateElementHasAccessibility:\n      \"Private elements cannot have an accessibility modifier ('%0').\",\n    ReadonlyForMethodSignature:\n      \"'readonly' modifier can only appear on a property declaration or index signature.\",\n    SetAccesorCannotHaveOptionalParameter:\n      \"A 'set' accessor cannot have an optional parameter.\",\n    SetAccesorCannotHaveRestParameter:\n      \"A 'set' accessor cannot have rest parameter.\",\n    SetAccesorCannotHaveReturnType:\n      \"A 'set' accessor cannot have a return type annotation.\",\n    StaticBlockCannotHaveModifier:\n      \"Static class blocks cannot have any modifier.\",\n    TypeAnnotationAfterAssign:\n      \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n    TypeImportCannotSpecifyDefaultAndNamed:\n      \"A type-only import can specify a default import or named bindings, but not both.\",\n    UnexpectedParameterModifier:\n      \"A parameter property is only allowed in a constructor implementation.\",\n    UnexpectedReadonly:\n      \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n    UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n    UnexpectedTypeCastInParameter:\n      \"Unexpected type cast in parameter position.\",\n    UnsupportedImportTypeArgument:\n      \"Argument in a type import must be a string literal.\",\n    UnsupportedParameterPropertyKind:\n      \"A parameter property may not be declared using a binding pattern.\",\n    UnsupportedSignatureParameterKind:\n      \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): boolean %checks {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers(\n      modified: {\n        [key: TsModifier]: ?true,\n        accessibility?: N.Accessibility,\n      },\n      allowedModifiers: TsModifier[],\n      disallowedModifiers?: TsModifier[],\n      errorTemplate?: ErrorTemplate,\n    ): void {\n      const enforceOrder = (pos, modifier, before, after) => {\n        if (modifier === before && modified[after]) {\n          this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n        }\n      };\n      const incompatible = (pos, modifier, mod1, mod2) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n        }\n      };\n\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?TsModifier = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n          } else {\n            enforceOrder(startPos, modifier, modifier, \"override\");\n            enforceOrder(startPos, modifier, modifier, \"static\");\n            enforceOrder(startPos, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n          } else {\n            enforceOrder(startPos, modifier, \"static\", \"readonly\");\n            enforceOrder(startPos, modifier, \"static\", \"override\");\n            enforceOrder(startPos, modifier, \"override\", \"readonly\");\n            enforceOrder(startPos, modifier, \"abstract\", \"override\");\n\n            incompatible(startPos, modifier, \"declare\", \"override\");\n            incompatible(startPos, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(\n            startPos,\n            // $FlowIgnore\n            errorTemplate,\n            modifier,\n          );\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        if (readonly) {\n          this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.isRelational(\"<\")) {\n          this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        if (method.kind === \"get\") {\n          if (method.parameters.length > 0) {\n            this.raise(this.state.pos, Errors.BadGetterArity);\n            if (this.isThisParam(method.parameters[0])) {\n              this.raise(\n                this.state.pos,\n                TSErrors.AccesorCannotDeclareThisParameter,\n              );\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method.parameters.length !== 1) {\n            this.raise(this.state.pos, Errors.BadSetterArity);\n          } else {\n            const firstParameter = method.parameters[0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(\n                this.state.pos,\n                TSErrors.AccesorCannotDeclareThisParameter,\n              );\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(\n                this.state.pos,\n                TSErrors.SetAccesorCannotHaveOptionalParameter,\n              );\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(\n                this.state.pos,\n                TSErrors.SetAccesorCannotHaveRestParameter,\n              );\n            }\n          }\n          if (method.typeAnnotation) {\n            this.raise(\n              method.typeAnnotation.start,\n              TSErrors.SetAccesorCannotHaveReturnType,\n            );\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        node,\n        [\"readonly\"],\n        [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n        TSErrors.InvalidModifierOnTypeMember,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        // $FlowIgnore\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.tsParseTypeParameterName();\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node: N.TsUnionType | N.TsIntersectionType = this.startNode();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            (node: N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node: N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return this.isContextual(\"abstract\") && this.lookahead().type === tt._new;\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      if (this.match(tt.name)) {\n        node.id = this.parseIdentifier();\n        this.checkLVal(\n          node.id,\n          \"typescript interface declaration\",\n          BIND_TS_INTERFACE,\n        );\n      } else {\n        node.id = null;\n        this.raise(this.state.start, TSErrors.MissingInterfaceName);\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(\"intrinsic\") &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript enum declaration\",\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          \"module or namespace declaration\",\n          BIND_TS_NAMESPACE,\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInAmbientContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(\"enum\");\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt.name: {\n            const value = this.state.value;\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, /* next */ true);\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || this.match(tt.name))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (this.match(tt.name)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      let override = false;\n      if (allowModifiers !== undefined) {\n        const modified = {};\n        this.tsParseModifiers(modified, [\n          \"public\",\n          \"private\",\n          \"protected\",\n          \"override\",\n          \"readonly\",\n        ]);\n        accessibility = modified.accessibility;\n        override = modified.override;\n        readonly = modified.readonly;\n        if (\n          allowModifiers === false &&\n          (accessibility || readonly || override)\n        ) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      if (this.isRelational(\"<\")) {\n        let missingParenErrorPos;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (isOptionalCall && !this.match(tt.parenL)) {\n              missingParenErrorPos = this.state.pos;\n              this.unexpected();\n            }\n\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              if (state.optionalChainMember) {\n                // $FlowIgnore\n                node.optional = isOptionalCall;\n              }\n\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (missingParenErrorPos) {\n          this.unexpected(missingParenErrorPos, tt.parenL);\n        }\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      node.importKind = \"value\";\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\") &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          TSErrors.TypeImportCannotSpecifyDefaultAndNamed,\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(\"type\") &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        this.parseClass(cls, true, true);\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const interfaceNode = this.startNode();\n        this.next();\n        const result = this.tsParseInterfaceDeclaration(interfaceNode);\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const invalidModifersForStaticBlocks = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n      ];\n      this.tsParseModifiers(\n        member,\n        invalidModifersForStaticBlocks.concat([\"static\"]),\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        const isStatic = !!member.static;\n        if (isStatic && this.eat(tt.braceL)) {\n          if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n            this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n          }\n          this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        } else {\n          this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n        if ((member: any).override) {\n          this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member: any).abstract) {\n        this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n      }\n\n      if ((member: any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(member.start, TSErrors.OverrideNotInSubClass);\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      if (\n        isDeclare &&\n        (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(\n          this.state.start,\n          TSErrors.ExpectedAmbientAfterExportDeclare,\n        );\n      }\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isAmbientContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(\n          this.state.start,\n          TSErrors.AbstractPropertyHasInitializer,\n          key.type === \"Identifier\" && !node.computed\n            ? key.name\n            : `[${this.input.slice(key.start, key.end)}]`,\n        );\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n\n      // $FlowIgnore\n      if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n        this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node), isLHS);\n        case \"TSParameterProperty\":\n          return super.toAssignable(node, isLHS);\n        case \"ParenthesizedExpression\":\n          return this.toAssignableParenthesizedExpression(node, isLHS);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean) {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      contextDescription: string,\n      ...args:\n        | [BindingTypes | void]\n        | [BindingTypes | void, ?Set<string>, boolean | void, boolean | void]\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(expr.parameter, \"parameter property\", ...args);\n          return;\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (\n            /*bindingType*/ !args[0] &&\n            contextDescription !== \"parenthesized expression\" &&\n            !expr.extra?.parenthesized\n          ) {\n            this.raise(expr.start, Errors.InvalidLhs, contextDescription);\n            break;\n          }\n          this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n          return;\n        case \"TSNonNullExpression\":\n          this.checkLVal(expr.expression, contextDescription, ...args);\n          return;\n        default:\n          super.checkLVal(expr, contextDescription, ...args);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(close) {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n      } else {\n        super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      if (this.match(tt.relational)) {\n        const code = this.input.charCodeAt(this.state.start);\n        if (code === charCodes.lessThan || code === charCodes.greaterThan) {\n          this.state.pos -= 1;\n          this.readToken_lt_gt(code);\n        }\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T: N.Class>(node: T, ...args: any[]): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node: any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | typeof undefined {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          (node: N.ClassDeclaration),\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(\"interface\")) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(\n            node.start,\n            TSErrors.NonClassMethodPropertyHasAbstractModifer,\n          );\n          this.next();\n          return this.tsParseInterfaceDeclaration(\n            (node: N.TsInterfaceDeclaration),\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod(...args: any[]) {\n      const method = super.parseMethod(...args);\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(\n            method.start,\n            TSErrors.AbstractMethodHasImplementation,\n            key.type === \"Identifier\" && !method.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n          );\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\nimport { makeErrorTemplates, ErrorCodes } from \"../parser/error\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nconst PlaceHolderErrors = makeErrorTemplates(\n  {\n    ClassNameIsRequired: \"A class name is required.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context: ?string): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(\"let\")) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash =\n      hasPlugin(plugins, \"recordAndTuple\") &&\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVerionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // $FlowIgnore\n    error.missingPlugins = \"doExpressions\"; // so @babel/core can provide better error message\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> =\n  Object.keys(mixinPlugins);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n  attachComment: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression. If isLHS is `true`, the following cases are allowed:\n                                    `[(a)] = [0]`, `[(a.b)] = [0]`\n\n   * @returns {Node} The converted assignable pattern\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordParenthesizedIdentifierError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(\n            node.start,\n            Errors.InvalidParenthesizedAssignment,\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg, isLHS);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n    isLHS: boolean,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return node.properties.every((prop, i) => {\n          return (\n            prop.type !== \"ObjectMethod\" &&\n            (i === last || prop.type !== \"SpreadElement\") &&\n            this.isAssignable(prop)\n          );\n        });\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  /**\n   * Verify that if a node is an lval - something that can be assigned to.\n   *\n   * @param {Expression} expr The given node\n   * @param {string} contextDescription The auxiliary context information printed when error is thrown\n   * @param {BindingTypes} [bindingType=BIND_NONE] The desired binding type. If the given node is an identifier and `bindingType` is not\n                                                   BIND_NONE, `checkLVal` will register binding to the parser scope\n                                                   See also src/util/scopeflags.js\n   * @param {?Set<string>} checkClashes An optional string set to check if an identifier name is included. `checkLVal` will add checked\n                                        identifier name to `checkClashes` It is used in tracking duplicates in function parameter lists. If\n                                        it is nullish, `checkLVal` will skip duplicate checks\n   * @param {boolean} [disallowLetBinding] Whether an identifier named \"let\" should be disallowed\n   * @param {boolean} [strictModeChanged=false] Whether an identifier has been parsed in a sloppy context but should be reinterpreted as\n                                                strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @memberof LValParser\n   */\n  checkLVal(\n    expr: Expression,\n    contextDescription: string,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?Set<string>,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\": {\n        const { name } = expr;\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(name, this.inModule)\n            : isStrictBindOnlyReservedWord(name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            name,\n          );\n        }\n\n        if (checkClashes) {\n          if (checkClashes.has(name)) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes.add(name);\n          }\n        }\n        if (disallowLetBinding && name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(name, bindingType, expr.start);\n        }\n        break;\n      }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (this.isObjectMethod(prop)) continue;\n\n          this.checkLVal(\n            prop,\n            \"object destructuring pattern\",\n            bindingType,\n            checkClashes,\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              \"array destructuring pattern\",\n              bindingType,\n              checkClashes,\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          \"assignment pattern\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          \"rest element\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          \"parenthesized expression\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, SourceTypeModuleErrors } from \"./error\";\nimport type { ParsingError } from \"./error\";\nimport { setInnerComments } from \"./comments\";\nimport { cloneIdentifier } from \"./node\";\n\n/*::\nimport type { SourceType } from \"../options\";\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParsingError,\n  ) {\n    refExpressionErrors.optionalParameters =\n      resultError?.pos ?? this.state.start;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      const leftIsHackPipeExpression =\n        left.type === \"BinaryExpression\" &&\n        left.operator === \"|>\" &&\n        this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\";\n\n      if (leftIsHackPipeExpression) {\n        // If the pipelinePlugin is configured to use Hack pipes,\n        // and if an assignment expression’s LHS invalidly contains `|>`,\n        // then the user likely meant to parenthesize the assignment expression.\n        // Throw a human-friendly error\n        // instead of something like 'Invalid left-hand side'.\n        // For example, `x = x |> y = #` (assuming `#` is the topic reference)\n        // groups into `x = (x |> y) = #`,\n        // and `(x |> y)` is an invalid assignment LHS.\n        // This is because Hack-style `|>` has tighter precedence than `=>`.\n        // (Unparenthesized `yield` expressions are handled\n        // in `parseHackPipeBody`,\n        // and unparenthesized `=>` expressions are handled\n        // in `checkHackPipeBodyEarlyErrors`.)\n        throw this.raise(this.state.start, Errors.PipeBodyIsTighter, operator);\n      }\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left, /* isLHS */ true);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // eslint-disable-next-line no-unused-vars\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (this.prodParam.hasIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              const bodyExpr = this.parseHackPipeBody(op, prec);\n              this.checkHackPipeBodyEarlyErrors(startPos);\n              return bodyExpr;\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              const childExpr = this.parseHackPipeBody(op, prec);\n              return this.parseSmartPipelineBodyInStyle(\n                childExpr,\n                startPos,\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n    );\n  }\n\n  // Helper function for `parseExprOpRightExpr` for the Hack-pipe operator\n  // (and the Hack-style smart-mix pipe operator).\n\n  parseHackPipeBody(op: TokenType, prec: number): N.Expression {\n    // If the following expression is invalidly a `yield` expression,\n    // then throw a human-friendly error.\n    // A `yield` expression in a generator context (i.e., a [Yield] production)\n    // starts a YieldExpression.\n    // Outside of a generator context, any `yield` as a pipe body\n    // is considered simply an identifier.\n    // This error is checked here, before actually parsing the body expression,\n    // because `yield`’s “not allowed as identifier in generator” error\n    // would otherwise have immediately\n    // occur before the pipe body is fully parsed.\n    // (Unparenthesized assignment expressions are handled\n    // in `parseMaybeAssign`,\n    // and unparenthesized `=>` expressions are handled\n    // in `checkHackPipeBodyEarlyErrors`.)\n    const bodyIsInGeneratorContext = this.prodParam.hasYield;\n    const bodyIsYieldExpression =\n      bodyIsInGeneratorContext && this.isContextual(\"yield\");\n\n    if (bodyIsYieldExpression) {\n      throw this.raise(\n        this.state.start,\n        Errors.PipeBodyIsTighter,\n        this.state.value,\n      );\n    } else {\n      return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  checkExponentialAfterUnary(node: N.AwaitExpression | N.UnaryExpression) {\n    if (this.match(tt.exponent)) {\n      this.raise(\n        node.argument.start,\n        Errors.UnexpectedTokenUnaryExponentiation,\n      );\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    refExpressionErrors: ?ExpressionErrors,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? this.state.type.startsExpr\n        : this.state.type.startsExpr && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, Errors.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else if (optional || this.match(tt.bracketL) || this.eat(tt.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(tt.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName =\n      !computed && this.match(tt.privateName) && this.state.value;\n    const property = computed\n      ? this.parseExpression()\n      : privateName\n      ? this.parsePrivateName()\n      : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n    node.property = property;\n\n    if (computed) {\n      this.expect(tt.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n        refExpressionErrors,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    setInnerComments(node, call.innerComments);\n    // mark trailing comments of `async` to be inner comments\n    setInnerComments(node, call.callee.trailingComments);\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        if (\n          this.isContextual(\"module\") &&\n          this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n          !this.hasFollowingLineBreak()\n        ) {\n          return this.parseModuleExpression();\n        }\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n          if (this.match(tt._function)) {\n            this.resetPreviousNodeTrailingComments(id);\n            this.next();\n            return this.parseFunction(\n              this.startNodeAtNode(id),\n              undefined,\n              true,\n            );\n          } else if (this.match(tt.name)) {\n            // If the next token begins with \"=\", commit to parsing an async\n            // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n            // expensive full-token lookahead on this common path.)\n            if (this.lookaheadCharCode() === charCodes.equalsTo) {\n              // although `id` is not used in async arrow unary function,\n              // we don't need to reset `async`'s trailing comments because\n              // it will be attached to the upcoming async arrow binding identifier\n              return this.parseAsyncArrowUnaryFunction(\n                this.startNodeAtNode(id),\n              );\n            } else {\n              // Otherwise, treat \"async\" as an identifier and let calling code\n              // deal with the current tt.name token.\n              return id;\n            }\n          } else if (this.match(tt._do)) {\n            this.resetPreviousNodeTrailingComments(id);\n            return this.parseDo(this.startNodeAtNode(id), true);\n          }\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          return this.parseArrowExpression(\n            this.startNodeAtNode(id),\n            [id],\n            false,\n          );\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.privateName: {\n        // https://tc39.es/proposal-private-fields-in-in\n        // RelationalExpression [In, Yield, Await]\n        //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n        const { value, start } = this.state;\n        node = this.parsePrivateName();\n        if (this.match(tt._in)) {\n          this.classScope.usePrivateName(value, start);\n        } else {\n          this.raise(start, Errors.PrivateInExpectedIn, value);\n        }\n        return node;\n      }\n\n      case tt.moduloAssign:\n        if (\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\" &&\n          this.getPluginOption(\"pipelineOperator\", \"topicToken\") === \"%\"\n        ) {\n          // If we find %= in an expression position, and the Hack-pipes proposal is active,\n          // then the % could be the topic token (e.g., in x |> %==y or x |> %===y), and so we\n          // reparse it as %.\n          // The next readToken() call will start parsing from =.\n\n          this.state.value = \"%\";\n          this.state.type = tt.modulo;\n          this.state.pos--;\n          this.state.end--;\n          this.state.endLoc.column--;\n        } else {\n          throw this.unexpected();\n        }\n\n      // falls through\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          // A pipe-operator proposal is active,\n          // although its configuration might not match the current token’s type.\n          node = this.startNode();\n          const start = this.state.start;\n          const tokenType = this.state.type;\n\n          // Consume the current token.\n          this.next();\n\n          // If the pipe-operator plugin’s configuration matches the current token’s type,\n          // then this will return `node`, will have been finished as a topic reference.\n          // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n          return this.finishTopicReference(\n            node,\n            start,\n            pipeProposal,\n            tokenType,\n          );\n        }\n      }\n\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (\n            isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n            lookaheadCh === charCodes.greaterThan // Fragment <>\n          ) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          }\n        }\n      }\n\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin’s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin’s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: N.Node,\n    start: number,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      // The token matches the plugin’s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      let nodeType;\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        // The proposal must otherwise be \"hack\",\n        // as enforced by testTopicReferenceConfiguration.\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        // The topic reference is not allowed in the current context:\n        // it is outside of a pipe body.\n        // Raise recoverable errors.\n        if (pipeProposal === \"smart\") {\n          this.raise(start, Errors.PrimaryTopicNotAllowed);\n        } else {\n          // In this case, `pipeProposal === \"hack\"` is true.\n          this.raise(start, Errors.PipeTopicUnbound);\n        }\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin’s configuration.\n      throw this.raise(\n        start,\n        Errors.PipeTopicUnconfiguredToken,\n        tokenType.label,\n      );\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin’s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration’s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    start: number,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        const pluginTopicToken = this.getPluginOption(\n          \"pipelineOperator\",\n          \"topicToken\",\n        );\n        return tokenType.label === pluginTopicToken;\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(start, Errors.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(node: N.Node): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(node: N.Node, isAsync: boolean): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, Errors.UnexpectedPrivateField);\n      }\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode();\n    const id = this.startNodeAt(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrors.ImportMetaOutsideModule);\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T: N.Node>(\n    value: any,\n    type: $ElementType<T, \"type\">,\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: { value: any, pattern: string, flags: string }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode<N.BooleanLiteral>(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode<N.NullLiteral>(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParameters === -1\n            ? null\n            : refExpressionErrors.optionalParameters,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      val.end = innerEndPos;\n      val.loc.end = innerEndLoc;\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  // eslint-disable-next-line no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, Errors.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (\n      !isPattern &&\n      !isGenerator &&\n      !containsEsc &&\n      this.maybeAsyncOrAccessorProp(prop)\n    ) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoveredInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      const type = this.state.type;\n      (prop: $FlowFixMe).key =\n        type === tt.num ||\n        type === tt.string ||\n        type === tt.bigint ||\n        type === tt.decimal\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              \"function name\",\n              BIND_OUTSIDE,\n              undefined,\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = new Set();\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        \"function parameter list\",\n        BIND_VAR,\n        allowDuplicates ? null : checkClashes,\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (type === tt.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, Errors.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(\n          startLoc,\n          Errors.AwaitBindingIdentifier,\n        );\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, Errors.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(startPos: number, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.AwaitExpressionFormalParameter,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    return (\n      this.hasPrecedingLineBreak() ||\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      this.match(tt.plusMin) ||\n      this.match(tt.parenL) ||\n      this.match(tt.bracketL) ||\n      this.match(tt.backQuote) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      this.match(tt.regexp) ||\n      this.match(tt.slash) ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.YieldInParameter,\n    );\n\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a Hack-style pipe body is parsed.\n  // The `startPos` is the starting position of the pipe body.\n\n  checkHackPipeBodyEarlyErrors(startPos: number): void {\n    // If the following token is invalidly `=>`,\n    // then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because Hack-style `|>` has tighter precedence than `=>`.\n    // (Unparenthesized `yield` expressions are handled\n    // in `parseHackPipeBody`,\n    // and unparenthesized assignment expressions are handled\n    // in `parseMaybeAssign`.)\n    if (this.match(tt.arrow)) {\n      throw this.raise(\n        this.state.start,\n        Errors.PipeBodyIsTighter,\n        tt.arrow.label,\n      );\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(startPos, Errors.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startPos` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos: number): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, Errors.PipelineTopicUnused);\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    const proposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n    if (proposal === \"smart\") {\n      // Reset the parser’s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors, SourceTypeModuleErrors } from \"./error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport { Position } from \"../util/location\";\nimport { cloneStringLiteral, cloneIdentifier } from \"./node\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tt.privateName to tt.hash + tt.name for backward Babel 7 compat.\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens) {\n  if (!process.env.BABEL_8_BREAKING) {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      if (token.type === tt.privateName) {\n        const { loc, start, value, end } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(\n          i,\n          1,\n          // $FlowIgnore: hacky way to create token\n          new Token({\n            type: tt.hash,\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc,\n          }),\n          // $FlowIgnore: hacky way to create token\n          new Token({\n            type: tt.name,\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end,\n          }),\n        );\n      }\n    }\n  }\n  return tokens;\n}\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    program: N.Program,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n    return this.finishNode<N.Program>(program, \"Program\");\n  }\n\n  // TODO\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   *\n   * @param {N.Statement} stmt\n   * @returns {N.Directive}\n   * @memberof StatementParser\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = (stmt: any);\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context: ?string): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      const matched = keywordRelationalOperator.exec(this.input);\n      if (matched !== null) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(next + matched[0].length);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrors.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithUnescapedName =\n      this.match(tt.name) && !this.state.containsEsc;\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(init.start, Errors.ForOfLet);\n      } else if (\n        // `for await (async of []);` is allowed.\n        awaitAt === -1 &&\n        startsWithUnescapedName &&\n        init.type === \"Identifier\" &&\n        init.name === \"async\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(init.start, Errors.ForOfAsync);\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.toAssignable(init, /* isLHS */ true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      \"variable declaration\",\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(hadSuperClass: boolean, oldStrict: boolean): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual = this.match(tt.name) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, Errors.OverrideOnConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const { type, value, start } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(start, Errors.StaticPrototype);\n    }\n\n    if (type === tt.privateName && value === \"constructor\") {\n      this.raise(start, Errors.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n  ) {\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-Initializer\n  parseInitializer(node: N.ClassProperty | N.ClassPrivateProperty): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if ((value === \"async\" && !this.state.containsEsc) || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.value,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.exportedIdentifiers.add(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      const isString = this.match(tt.string);\n      const local = this.parseModuleExportName();\n      node.local = local;\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n      } else if (isString) {\n        node.exported = cloneStringLiteral(local);\n      } else {\n        node.exported = cloneIdentifier(local);\n      }\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          this.state.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          keyName,\n        );\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    const importedIsString = this.match(tt.string);\n    specifier.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = cloneIdentifier(imported);\n    }\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null],"names":["HMR_HOST","HMR_PORT","HMR_SECURE","HMR_ENV_HASH","module","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","checkedAssets","acceptedAssets","assetsToAccept","location","protocol","indexOf","hostname","port","parent","isParcelRequire","WebSocket","getHostname","getPort","test","ws","onmessage","event","JSON","parse","type","removeErrorOverlay","assets","filter","asset","envHash","handled","forEach","didAccept","hmrAcceptCheck","root","id","depsByBundle","console","clear","hmrApply","i","length","hmrAcceptRun","window","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","modules","parents","k","d","dep","Array","isArray","concat","getParents","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","setTimeout","links","querySelectorAll","href","servedFromHMRServer","RegExp","absolute","origin","updateLink","reloadCSS","deps","Function","output","cached","cache","some","v","cb","assetsToAlsoAccept","apply","mount","exports","require","Object","defineProperty","value","str","expectsLowerCase","create","list","val","toLowerCase","PatchFlagNames","slotFlagsText","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","makeMap","range","source","start","end","lines","newlineSequences","_","idx","count","res","j","line","repeat","Math","max","String","lineLength","newLineSeqLength","pad","min","specialBooleanAttrs","isSpecialBooleanAttr","isBooleanAttr","unsafeAttrCharRE","attrValidationCache","name","hasOwnProperty","isUnsafe","propsToAttrMap","acceptCharset","className","htmlFor","httpEquiv","isNoUnitNumericStyleProp","isKnownAttr","item","normalized","normalizeStyle","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","tmp","trim","styles","normalizedKey","startsWith","hyphenate","normalizeClass","HTML_TAGS","SVG_TAGS","VOID_TAGS","isHTMLTag","isSVGTag","isVoidTag","escapeRE","string","match","exec","escaped","index","lastIndex","charCodeAt","substring","commentStripRE","src","replace","a","b","equal","looseEqual","aValidType","isDate","bValidType","getTime","looseCompareArrays","aKeysCount","keys","bKeysCount","aHasKey","bHasKey","arr","findIndex","toDisplayString","stringify","replacer","_key","isMap","size","entries","reduce","isSet","values","isPlainObject","babelParserDefaultPlugins","EMPTY_OBJ","freeze","EMPTY_ARR","NOOP","NO","onRE","isOn","isModelListener","extend","assign","el","splice","prototype","hasOwn","toTypeString","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toRawType","slice","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","hit","camelizeRE","camelize","c","toUpperCase","hyphenateRE","capitalize","charAt","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","configurable","enumerable","toNumber","n","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","global","escapeHtml","escapeHtmlComment","generateCodeFrame","isSSRSafeAttrName","looseIndexOf","stringifyStyle","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","constructor","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","options","token","set","createBinop","types","num","bigint","decimal","regexp","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","code","skipWhiteSpace","isWhitespace","Position","col","column","SourceLocation","filename","identifierName","getLineInfo","input","offset","lineStart","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","plugins","has","getPluginOption","plugin","get","setTrailingComments","node","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","addComment","comment","loc","state","processComment","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","containingNode","finalizeComment","trailingNode","leadingComments","commentStart","properties","arguments","params","specifiers","finalizeRemainingComments","resetPreviousNodeTrailingComments","ErrorCodes","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","reasonCode","ParserError","getLocationForPosition","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raise","raiseWithData","raiseOverwrite","errorRecovery","errors","_raise","errorTemplate","errorContext","err","isLookahead","superClass","parseRegExpLiteral","pattern","flags","regex","estreeParseLiteral","parseBigIntLiteral","bigInt","BigInt","parseDecimalLiteral","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","method","isValidDirective","parenthesized","stmtToDirective","addExtra","parseBlockBody","args","directiveStatements","directives","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parseMaybePrivateName","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","isPrivateName","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","prop","isPattern","isAccessor","shorthand","parseObjectProperty","startPos","refExpressionErrors","isAssignable","isBinding","toAssignable","isLHS","toAssignableObjectExpressionProp","Errors","finishCallExpression","optional","callee","attributes","toReferencedArguments","parseExport","exported","parseSubscript","base","noCalls","optionalChainMember","stop","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","isObjectMethod","TokContext","preserveSpace","brace","tt","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","isIteratorStart","current","next","reservedWordLikeSet","canBeReservedWord","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_STATIC_BLOCK","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","BIND_FLOW_DECLARE_FN","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","checkLocalExport","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","State","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","ct","exprAllowed","containsEsc","strictErrors","tokensLength","init","strictMode","sourceType","startLine","curPosition","clone","skipArrays","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","ParserErrors","tokens","pushToken","checkKeywordEscapes","nextToken","eat","createLookaheadState","curContext","lookahead","old","curr","nextTokenStart","nextTokenStartSince","skip","lookaheadCharCode","codePointAtPos","cp","trail","setStrict","skipSpace","finishToken","readTmplToken","getTokenFromCode","skipBlockComment","skipLineComment","startSkip","ch","spaceStart","loop","attachComment","CommentWhitespace","prevType","readToken_numberSign","readToken_interpreter","nextPos","expectPlugin","readWord1","finishOp","readToken_dot","readNumber","readToken_slash","readToken_mult_modulo","width","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_question","next2","readRadixNumber","readString","readWord","fromCodePoint","readRegexp","content","mods","char","includes","readInt","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","invalid","total","Infinity","prev","Number","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","readCodePoint","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","containsInvalid","inTemplate","substr","octalStr","octal","firstCode","escStart","identifierCheck","esc","keywordTypes","kw","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","declarePrivateName","elementType","classScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","usePrivateName","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","recordDeclarationError","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","recordParenthesizedIdentifierError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","UtilParser","isRelational","op","expectRelational","unexpected","isContextual","isUnparsedContextual","nameStart","nameEnd","nextCh","isLookaheadContextual","eatContextual","expectContextual","canInsertSemicolon","hasPrecedingLineBreak","hasFollowingLineBreak","isLineTerminator","semicolon","allowAsi","expect","assertNoSpace","messageOrType","missingPlugin","expectOnePlugin","names","tryParse","oldState","abortSignal","failState","thrown","aborted","checkExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","isLiteralPropertyName","property","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","bind","oldProdParam","prodParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","ExpressionErrors","Node","parser","ranges","NodePrototype","__clone","newNode","clonePlaceholder","cloneIdentifier","cloned","expectedNode","cloneStringLiteral","NodeUtils","resetStartLocation","resetEndLocation","resetStartLocationFromNode","locationNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","shouldParseTypes","shouldParseEnums","matches","Error","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloPos","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","rest","this","returnType","typeAnnotation","flowParseDeclare","insideModule","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","parseExprAtom","bodyNode","parseImport","hasModuleExport","default","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","topLevel","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","result","setOptionalParametersError","originalNoArrowAt","consequent","failed","tryParseConditionalConsequent","valid","getArrowLikeExpressions","alternate","parseMaybeAssign","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","toAssignableList","trailingComma","checkParams","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","fullWord","exprList","trailingCommaPos","toReferencedList","isParenthesizedExpr","parseArrayLike","close","canBePattern","isTuple","checkLVal","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyName","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","left","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","contextDescription","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","as_ident","imported","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","jsx","tc","j_oTag","j_expr","abort","arrowExpression","maybeUnwrapTypeCastExpression","async","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewArguments","targs","parseArrowExpression","parseTopLevel","file","program","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","afterNext","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","object","getQualifiedJSXName","namespace","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","entity","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","lookaheadState","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","modifier","tsIsIdentifier","tsTokenCanFollowModifier","tsNextTokenCanFollowModifier","tsParseModifier","allowedModifiers","tsTryParse","tsParseModifiers","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","element","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","firstParameter","tsParseTypeMember","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","parseMaybeUnary","tsParseArrayTypeOrHigher","tsParseTypeOperator","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","find","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsIsDeclarationStart","parseAssignableListItem","decorators","override","elt","pp","parameter","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","interfaceNode","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","parseClassPropertyAnnotation","definite","typeCast","toAssignableParenthesizedExpression","parseMaybeDecoratorArguments","checkCommaAfterRest","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","getExpression","placeholder","PlaceHolderErrors","ClassNameIsRequired","parsePlaceholder","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","maybeParseExportDefaultSpecifier","checkExport","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","parseIdentifierName","identifier","option","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","proposal","proposalList","p","tupleSyntaxIsHash","topicToken","tokenList","moduleAttributesVerionPluginOption","missingPlugins","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","getOptions","opts","unwrapParenthesizedExpression","LValParser","last","isLast","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseSpread","refNeedsArrowPos","parseRestBinding","parseObjectLike","closeCharCode","allowEmpty","elts","parseDecorator","checkClashes","disallowLetBinding","strictModeChanged","elem","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","parseMaybeAssignDisallowIn","resultError","parseYield","ownExpressionErrors","parseMaybeConditional","leftIsHackPipeExpression","parseExprOps","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","nextOp","withTopicBindingContext","bodyExpr","parseHackPipeBody","checkHackPipeBodyEarlyErrors","childExpr","parseSmartPipelineBodyInStyle","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseExprOpBaseRightExpr","bodyIsInGeneratorContext","bodyIsYieldExpression","checkExponentialAfterUnary","sawUnary","isAwait","isAwaitAllowed","parseAwait","update","isDelete","parseUpdate","isAmbiguousAwait","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","parseNoCallExpr","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","parseSuper","parseImportMetaProperty","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","pipeProposal","tokenType","finishTopicReference","lookaheadCh","codePointAt","testTopicReferenceConfiguration","nodeType","topicReferenceIsAllowedInCurrentContext","registerTopicReference","pluginTopicToken","isPrivate","meta","parseMetaProperty","propertyName","SourceTypeModuleErrors","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","oldInPropertyName","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","reservedTest","delegating","delegate","topicReferenceWasUsedInCurrentContext","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","revertScopes","parseProgram","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","keywordRelationalOperator","babel7CompatTokens","hashEndPos","hashEndLoc","StatementParser","interpreter","parseInterpreterDirective","isLetKeyword","matched","endCh","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","discriminant","cases","cur","sawDefault","isCase","simple","block","handler","clause","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","statement","isHangingStatement","requireId","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","exportedName","nodes","surrogate","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","importedIsString","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","getParserClass","parserClassCache","pluginsFromOptions","pluginList","factory","define","amd","estreeWalker","should_skip","should_remove","replacement","WalkerBase","leave","visit","_should_skip","_should_remove","_replacement","skipped","removed","instance","SyncWalker","AsyncWalker","asyncWalk","walk","reactivity","shared","vnode","msg","pauseTracking","component","appWarnHandler","appContext","config","warnHandler","trace","getComponentTrace","callWithErrorHandling","proxy","formatComponentName","warnArgs","formatTrace","resetTracking","currentVNode","normalizedStack","recurseCount","parentInstance","logs","entry","formatTraceEntry","isRoot","open","props","formatProps","formatProp","isRef","toRaw","ErrorTypeStrings","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","logError","info","pushWarningContext","popWarningContext","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","RECURSION_LIMIT","job","jobId","getId","middle","middleJobId","allowRecurse","findInsertionIndex","queueFlush","flushJobs","activeQueue","pendingQueue","queueCb","seen","parentJob","checkRecursiveUpdates","flushPreFlushCbs","deduped","sort","active","flushPostFlushCbs","ownerInstance","componentName","getComponentName","isHmrUpdating","hmrDirtyComponents","globalObject","__VUE_HMR_RUNTIME__","createRecord","tryWrap","rerender","__hmrId","record","instances","isClassComponent","__vccOpts","newRender","render","renderCache","newComp","queuePostFlushCb","queueJob","hook","devtools","app","version","emit","Fragment","Text","Comment","Comment$1","Static","devtoolsComponentAdded","createDevtoolsComponentHook","devtoolsComponentUpdated","devtoolsComponentRemoved","uid","devtoolsPerfStart","createDevtoolsPerformanceHook","devtoolsPerfEnd","time","deprecationData","isRuntimeOnly","legacyHook","newHook","coerced","comp","configMsg","instanceWarned","warnCount","getCurrentInstance","getCompatConfigForKey","dupKey","compId","componentDupKey","isCompatEnabled","globalCompatConfig","MODE","instanceConfig","compatConfig","enableForBuiltIn","__isBuiltIn","rawMode","mode","rawArgs","emitsOptions","propsOptions","validator","isValid","modelArg","modifiersKey","number","devtoolsComponentEmit","lowerCaseEvent","handlerName","onceHandler","emitted","asMixin","emitsCache","emits","hasExtends","extendEmits","normalizedFromExtend","normalizeEmitsOptions","currentRenderingInstance","currentScopeId","__scopeId","withScopeId","_id","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","setCurrentRenderingInstance","_c","accessedAttrs","Component","withProxy","slots","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","markAttrsAccessed","getFunctionalFallthrough","setRoot","patchFlag","getChildRoot","filterModelListeners","cloneVNode","allAttrs","eventAttrs","extraAttrs","dirs","isElementRoot","transition","blockStack","createVNode","rawChildren","dynamicChildren","childRoot","filterSingleRoot","dynamicIndex","updatedRoot","singleRoot","child","isVNode","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","hasPropsChanged","dynamicProps","isEmitListener","$stable","nextKeys","subTree","isSuspense","__isSuspense","SuspenseImpl","process","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","slotScopeIds","rendererInternals","mountSuspense","patchSuspense","hydrate","hydrateSuspense","createSuspenseBoundary","normalize","normalizeSuspenseChildren","Suspense","eventListener","patch","o","hiddenContainer","suspense","pendingBranch","ssContent","triggerEvent","ssFallback","setActiveBranch","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","effects","timeout","fallback","hasWarned","m","move","isUnmounted","resume","delayEnter","afterLeave","hasUnresolvedAncestor","fallbackVNode","mountFallback","registerDep","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","updateHOCHostEl","doRemove","hydrateNode","isSlotChildren","normalizeSuspenseSlot","s","isCompiledSlot","openBlock","currentBlock","closeBlock","singleChild","branch","currentInstance","provides","parentProvides","defaultValue","treatDefaultAsFactory","effect","doWatch","INITIAL_WATCHER_VALUE","immediate","deep","flush","onTrack","onTrigger","warnInvalidSource","getter","forceTrigger","isMultiSource","_shallow","isReactive","traverse","cleanup","onInvalidate","baseGetter","runner","onStop","isInSSRComponentSetup","newValue","scheduler","queuePostRenderEffect","isMounted","queuePreFlushCb","lazy","recordInstanceBoundEffect","publicThis","createPathGetter","path","segments","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","BaseTransitionImpl","appear","Boolean","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","useTransitionState","prevTransitionKey","getTransitionRawChildren","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","hooks","beforeEnter","leavingVNode","afterHook","cancelHook","called","done","_enterCb","cancelled","isKeepAlive","keepComment","keyedFragmentCount","isAsyncWrapper","__asyncLoader","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","pendingRequest","resolvedComp","retries","retry","load","thisRequest","reject","userRetry","userFail","__esModule","Symbol","toStringTag","defineComponent","__asyncResolved","createInnerComp","loaded","ref","delayed","__isKeepAlive","KeepAliveImpl","include","exclude","sharedContext","renderer","__v_cache","_unmount","storageContainer","activate","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","resetShapeFlag","pruneCacheEntry","watch","pruneCache","pendingCacheKey","cacheSubtree","getInnerChild","onUpdated","rawVNode","cachedVNode","KeepAlive","target","registerKeepAliveHook","wrappedHook","__wdc","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","__weh","setCurrentInstance","apiName","createHook","lifecycle","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","shouldCacheAccess","resolveMergedOptions","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provide","provideOptions","inject","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","filters","checkDuplicateProperties","createDuplicateChecker","resolveInjections","methodHandler","writable","reactive","opt","createWatcher","Reflect","ownKeys","register","_hook","registerLifecycleHook","onActivated","onDeactivated","onErrorCaptured","exposed","normalizeInject","h","r","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","mergeAsArray","mergeWatchOptions","mergeInject","merged","isStateful","isSSR","InternalObjectKey","propsDefaults","setFullProps","validateProps","shallowReactive","rawPrevProps","rawCurrentProps","hasAttrsChanged","propsToUpdate","camelizedKey","resolvePropValue","kebabKey","trigger","needCastKeys","rawCastValues","camelKey","castValues","isAbsent","propsCache","extendProps","normalizePropsOptions","validatePropName","booleanIndex","getTypeIndex","stringIndex","ctor","getType","expectedTypes","isSameType","resolvedValues","validateProp","required","assertType","getInvalidTypeMessage","isSimpleType","receivedType","expectedValue","styleValue","receivedValue","isExplicable","isBoolean","explicitTypes","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","isBuiltInDirective","internalInstance","bindings","dir","oldBindings","binding","isNativeTag","performance","globalProperties","compilerOptions","WeakMap","rootComponent","rootProps","createAppContext","installedPlugins","_uid","_component","_props","_container","_context","_instance","use","install","mixin","validateComponentName","validateDirectiveName","rootContainer","isHydrate","__vue_app__","devtoolsInitApp","devtoolsUnmountApp","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","mt","mountComponent","patchProp","insert","createComment","hasChildNodes","firstChild","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","locateClosingAsyncAnchor","previousSibling","lastChild","createTextVNode","hydrateChildren","setRef","forcePatchValue","invokeDirectiveHook","endsWith","onClick","vnodeHooks","onVnodeBeforeMount","queueEffectWithSuspense","textContent","parentVNode","fragmentSlotScopeIds","supported","perf","isSupported","mark","startTag","endTag","measure","clearMarks","rtc","rtg","rawRef","oldRawRef","isUnmount","refValue","getExposeProxy","owner","oldRef","refs","doSet","baseCreateRenderer","createHydrationFunctions","createHydrationFns","__VUE__","setDevtoolsHook","__VUE_DEVTOOLS_GLOBAL_HOOK__","hostInsert","hostRemove","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","patchStaticNode","processFragment","processElement","processComponent","internals","removeStaticNode","moveStaticNode","mountElement","patchElement","is","mountChildren","unmountChildren","scopeId","needCallTransitionHooks","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","areChildrenSVG","patchBlockChildren","traverseStaticChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","updateComponent","initialVNode","createComponentInstance","registerHMR","startMeasure","setupComponent","endMeasure","shouldUpdateComponent","updateComponentPreRender","invalidateJob","bm","hydrateSubTree","renderComponentRoot","scopedInitialVNode","bu","u","originNext","nextTree","prevTree","createDevEffectOptions","updateProps","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","nextChild","parentAnchor","l2","e1","e2","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","moveType","needTransition","performLeave","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","removeFragment","performRemove","unregisterHMR","bum","_vnode","mc","pc","pbc","createApp","createAppAPI","shallow","ch1","arrI","isTeleport","__isTeleport","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","TeleportImpl","querySelector","mainAnchor","targetAnchor","wasDisabled","currentContainer","currentAnchor","moveTeleport","nextTarget","hydrateTeleport","isReorder","targetNode","_lpa","Teleport","COMPONENTS","DIRECTIVES","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","registry","disableTracking","isBlockTreeEnabled","__v_isVNode","vnodeArgsTransformer","transformer","createVNodeWithArgsTransform","_createVNode","normalizeKey","normalizeRef","isBlockNode","normalizeChildren","isProxy","klass","__v_skip","extraProps","mergeRef","mergedProps","mergeProps","deepCloneVNode","text","flag","numberOfNodes","asBlock","createBlock","slot","slotFlag","toMerge","existing","incoming","renderItem","isInteger","dynamicSlots","noSlotted","validSlotContent","ensureValidVNode","rendered","vnodes","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","shallowReadonly","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","nextTick","$watch","instanceWatch","PublicInstanceProxyHandlers","accessCache","__isScriptSetup","normalizedProps","publicGetter","cssModule","track","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","exposeProxy","setupContext","bc","sp","createRenderContext","isBuiltInTag","appIsNativeTag","initProps","setupResult","setupStatefulComponent","markRaw","Proxy","exposePropsOnRenderContext","createSetupContext","unsetInstance","resolvedResult","finishComponentSetup","__ssrInlineRender","ssrRender","devtoolsRawSetupState","proxyRefs","exposeSetupStateOnRenderContext","compile","_compile","skipOptions","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","_rc","applyOptions","attrDevProxyHandlers","deleteProperty","classifyRE","classify","displayName","__file","inferFromRegistry","getterOrOptions","warnRuntimeUsage","defineEmit","defineEmits","defaults","getContext","getAwaitable","awaitable","propsOrChildren","ssrContextKey","useSSRContext","vueStyle","numberStyle","stringStyle","keywordStyle","formatter","header","__isVue","genRefFlag","formatValue","isReadonly","formatInstance","blocks","createInstanceBlock","extractKeys","asRaw","Comp","extracted","isKeyOfType","devtoolsFormatters","_ssrUtils","ssrUtils","resolveFilter","compatUtils","customRef","shallowRef","toRef","toRefs","triggerRef","unref","createCommentVNode","createHydrationRenderer","createRenderer","createSlots","createStaticVNode","defineAsyncComponent","defineExpose","defineProps","initCustomFormatter","mergeDefaults","popScopeId","pushScopeId","registerRuntimeCompiler","renderList","renderSlot","resolveComponent","resolveDirective","resolveDynamicComponent","toHandlers","transformVNodeArgs","useAttrs","useContext","useSlots","watchEffect","withAsyncContext","withDefaults","withDirectives","script","initialize","Layout","Testimonial","MovieFilter","_withId","_hoisted_1","_cache","movies","media","counter","searchTerm","movieYear","filterSearch","movie","title","handleChange","selectedIndex","selectedOption","year","changeMovieYear","selectMovieYear","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","genre","$event","poster","_component_Testimonial","_component_MovieFilter","_component_Layout"],"version":3,"file":"index.HASH_REF_e9312995559a911a6f9b63a6bd78eeec.js.map","sourceRoot":"/__parcel_source_root/"}